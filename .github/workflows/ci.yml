on:
  # Trigger the workflow on push or
  # pull request, but only for the
  # main branch.
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # Allow manual triggering
  workflow_dispatch:
  # Weekly run to account for
  # changed dependencies.
  schedule:
    - cron: '17 03 * * 0'

name: CI

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12]
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - 'pypy-3.7'
          - 'pypy-3.8'
          - 'pypy-3.9-nightly'
          - 'pypy-3.10-nightly'
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: v2-pip-${{ runner.os }}-${{ matrix.python-version }}
          restore-keys: |
            v2-pip-${{ runner.os }}
            v2-pip-

      - name: Install dependencies
        run: |
          pip install pytest
          pip install sphinx
          pip install recommonmark

      - name: Build the code
        run: python ./setup.py build_ext -i

      - name: Run tests
        run: python -m pytest tests

      - name: Cleanup
        run: make clean

      - name: Re-build with coverage info
        run: CFLAGS="-coverage" python ./setup.py build_ext -i

      - name: Test with coverage
        run: python -m pytest tests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          #files: ./coverage1.xml,./coverage2.xml
          #directory: ./coverage/reports/
          #flags: unittests
          #env_vars: OS,PYTHON
          name: codecov-python-${{ matrix.python-version }}
          #fail_ci_if_error: true
          #verbose: true
          gcov: true

      - name: Build documentation
        run: make doc
